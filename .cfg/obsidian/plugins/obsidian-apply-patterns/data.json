{
  "patterns": [
    {
      "name": "link markdown: fix title",
      "rules": [
        {
          "from": "\\[\\([0-9]+\\)[ ]*",
          "to": "[",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "- YouTube",
          "to": "| YT",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "GitHub - ",
          "to": "",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "- Stack Overflow",
          "to": "| SO",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "· Issue #([0-9]+) · ([0-9A-Za-z_\\-]+)/([0-9A-Za-z_\\-]+)",
          "to": "| issue #$1 | $3",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "· ([0-9a-z_\\-]+)/([0-9a-z_\\-]+) · Discussion #([0-9]+)",
          "to": "| discussion #$3 | $2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "- DEV Community",
          "to": "| dev.to",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "- Database Administrators Stack Exchange",
          "to": "| DBA Stack Exch.",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\[([a-zA-Z0-9_-]+)\\/(.+): (.+)\\]\\((https://github.com/(.+))\\)",
          "to": "[$2]($4) by [$1](https://github.com/$1)\\n\\t- _$3_",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\[([a-zA-Z0-9_-]+)\\/(.+)\\]\\((https://github.com/(.+))\\)",
          "to": "[$2]($3) by [$1](https://github.com/$1)",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(\\[[^\\[]* \\| YT\\])",
          "to": ":tv: $1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(\\[[^\\[]* \\| SO\\])",
          "to": ":speech_balloon: $1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "([\\[\\\\]*[^\\[]+ \\| issue #\\d+ \\| [^\\[]+\\])",
          "to": ":speech_balloon: $1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(\\[[^\\[]+ \\| discussion #\\d+ \\| [^\\[]+\\])",
          "to": ":speech_balloon: $1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\[DistroWatch.com: ([^\\]]*)\\]",
          "to": "[$1 | DistroWatch]",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(\\[[^\\[]+ \\| Hacker News\\])",
          "to": ":speech_balloon: $1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(\\[[^\\[]+ \\| dev.to\\])",
          "to": ":newspaper: $1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(\\[[^\\[]+ Discourse\\])",
          "to": ":speech_balloon: $1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(\\[[^\\[]+ \\| Medium\\])",
          "to": ":newspaper: $1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\[([^\\[]+) - Ask Ubuntu\\]",
          "to": ":speech_balloon: [$1 | Ask Ubuntu]",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\[([^\\[]+) / Хабр\\]",
          "to": ":newspaper: [$1 | Хабр]",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "link markdown: fix title: remove author",
      "rules": [
        {
          "from": "\\[\\([0-9]+\\)[ ]*",
          "to": "[",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "- YouTube",
          "to": "| YT",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "- Stack Overflow",
          "to": "| SO",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "· Issue #([0-9]+) · ([0-9a-z_\\-]+)/([0-9a-z_\\-]+)",
          "to": "| issue #$1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "· ([0-9a-z_\\-]+)/([0-9a-z_\\-]+) · Discussion #([0-9]+)",
          "to": "| discussion #$3",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\| issue #([0-9]+) \\| ([0-9a-z_\\-]+)",
          "to": "| issue #$1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\| discussion #([0-9]+) \\| ([0-9a-z_\\-]+)",
          "to": "| discussion #$1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "`inline code` ( - list item)",
      "rules": [
        {
          "from": "^([ \\t]*)-*[ \\t]*([^\\n\\r]*)",
          "to": "$1- `$2`",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "quote (_\")",
      "rules": [
        {
          "from": "^",
          "to": "_\"",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "$",
          "to": "\"_",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "small",
      "rules": [
        {
          "from": "^",
          "to": "<small>",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "$",
          "to": "</small>",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "Reddit link title: fix",
      "rules": [
        {
          "from": "^\\([0-9]+\\) ",
          "to": "",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": ": r/",
          "to": "| /r/",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "^([ \\t]*)-*[ \\t]*([^\\n\\r]*)",
          "to": "$1- :speech_balloon: $2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "small italic",
      "rules": [
        {
          "from": "^",
          "to": "<small><i>",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "$",
          "to": "</small></i>",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "strip hashtags",
      "rules": [
        {
          "from": "#",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": true,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "__test example: duplicate word__",
      "rules": [
        {
          "from": "\\[([A-Za-z0-9\\-_\\.]+) \\| \\1 \\|",
          "to": "[$1 |",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "demo",
      "rules": [
        {
          "from": "^([ \\t]*[\\-]{0,1})",
          "to": "$1 :balloon:",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "sourcegraph.com source code link fix",
      "rules": [
        {
          "from": "sourcegraph.com/",
          "to": "",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "/github.com/([A-Za-z0-9_\\-\\.]+)/([A-Za-z0-9_\\-\\.]+)@([a-z0-9]+)/",
          "to": "/github.com/$1/$2/",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "/-/blob",
          "to": "/tree/master",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "/package.json",
          "to": "",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "/tree/master([^\\/])",
          "to": "$1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "https://github.com/([A-Za-z0-9_\\-\\.]+)/([A-Za-z0-9_\\-\\.]+)/tree/master/([A-Za-z0-9_\\-\\.\\/]+)",
          "to": "[$2: $3 | $1 | GH](https://github.com/$1/$2/tree/master/$3)",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "https://github.com/([A-Za-z0-9_\\-\\.]+)/([A-Za-z0-9_\\-\\.]+)([\\n\\r\\t ]+)",
          "to": "[$2 | $1 | GH](https://github.com/$1/$2)$3",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\[([A-Za-z0-9\\-_\\.]+) \\| \\1 \\|",
          "to": "[$1 |",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "underline",
      "rules": [
        {
          "from": "^",
          "to": "<u>",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "$",
          "to": "</u>",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "deprecated: github link fix",
      "rules": [
        {
          "from": "\\[([a-zA-Z0-9_-]+)\\/(.+): (.+)\\]\\((https://github.com/(.+))\\)",
          "to": "[$2]($4) by [$1](https://github.com/$1)\\n\\t- _$3_",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "string constant",
      "rules": [
        {
          "from": "^",
          "to": ":symbols: _`'",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "$",
          "to": "'`_",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "path split",
      "rules": [
        {
          "from": "`*([a-zA-Z0-9\\-_ \\.\\/]+)\\/([a-zA-Z0-9\\-_ \\.]+)`*",
          "to": ":page_with_curl:`$2` in :open_file_folder:`$1`",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "React/Vue/JSX component",
      "rules": [
        {
          "from": "(.*)",
          "to": "`<$1>`",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "\"[]\" - comments by reviewer/translator",
      "rules": [
        {
          "from": "(.*)",
          "to": "\\[$1\\]",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "^(\\\\\\[\\\\\\])$",
          "to": "\\[...\\]",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "fix tabs list from browser",
      "rules": [
        {
          "from": "chrome-extension:\\/\\/gcjdagaoojgeilcobhibkgbodajcojda\\/data\\/offline\\/index\\.html\\?rd=",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": true,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "║ ",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": true,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "chrome-extension:\\/\\/blaaajhemilngeeffpbfkdjjoefldkok\\/blocked\\.html\\?[0-9]+&",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": true,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "[-] checkbox: suspended",
      "rules": [
        {
          "from": "- \\[.\\]",
          "to": "- [-]",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "^([ \\t]*)- ([^\\[])",
          "to": "$1- [-] $2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "^([ \\t]*)- \\[(.[^\\]])",
          "to": "$1- [-] [$2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "[/] checkbox: partially done",
      "rules": [
        {
          "from": "- \\[.\\]",
          "to": "- [/]",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "`path/location to folder/directory/file`",
      "rules": [
        {
          "from": "`",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "([^\\r\\n\\t\\-\\[\\] ]+[^\\r\\n]*[^\\r\\n\\t ]+)",
          "to": ":open_file_folder: `$1`",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "lines add padding",
      "rules": [
        {
          "from": "^",
          "to": "\\n",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "$",
          "to": "\\n",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "# [ ] header checkbox task: todo",
      "rules": [
        {
          "from": "^([ -]*)([^#])",
          "to": "## $2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(#+)[ -]*",
          "to": "$1 :black_square_button: ",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "# [v] header checkbox task: done",
      "rules": [
        {
          "from": "(#+.*):black_square_button:[ ]*",
          "to": "$1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(#+)",
          "to": "$1 :white_check_mark:",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "# [x] header checkbox task: partially done",
      "rules": [
        {
          "from": "(#+.*):black_square_button:[ ]*",
          "to": "$1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(#+)",
          "to": "$1 :negative_squared_cross_mark:",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "# (\\) header checkbox task: suspend / cancel",
      "rules": [
        {
          "from": "(#+.*):black_square_button:[ ]*",
          "to": "$1",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(#+)",
          "to": "$1 :no_entry_sign:",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "# [ ] BUG header checkbox task: todo",
      "rules": [
        {
          "from": "^([ -]*)([^#])",
          "to": "## $2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(#+)[ -]*",
          "to": "$1 :black_square_button: :ladybug: ",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "article emoji prefix",
      "rules": [
        {
          "from": "^([ \\t]*)-*[ \\t]*([^\\n\\r]*)",
          "to": "$1- :newspaper: $2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "tutorial emoji prefix",
      "rules": [
        {
          "from": "^([ \\t]*)-*[ \\t]*([^\\n\\r]*)",
          "to": "$1- :beginner: $2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "inline code (`)",
      "rules": [
        {
          "from": "([^\\n\\r]*)",
          "to": "`$1`",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "discussion/forum link",
      "rules": [
        {
          "from": "^([ \\t]*)-*[ \\t]*([^\\n\\r]*)",
          "to": "$1- :speech_balloon: $2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "quote (_)",
      "rules": [
        {
          "from": "([ \\t-]*)([^\\n\\r]*)",
          "to": "$1_$2_",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "JIRA task link",
      "rules": [
        {
          "from": "\\[\\\\{0,1}\\[([^\\]\\\\]*)\\\\{0,1}\\] ([^\\]]*)\\]\\(([^)]*)\\)",
          "to": "[$1]($3) $2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": " - Jira",
          "to": "",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "### to heading lvl. 3",
      "rules": [
        {
          "from": "^[\\t #\\-]*",
          "to": "### ",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "$",
          "to": "\\n",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\[ \\]",
          "to": ":black_square_button:",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\[x\\]",
          "to": ":white_check_mark:",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "#### to heading lvl. 4",
      "rules": [
        {
          "from": "^[\\t #\\-]*",
          "to": "#### ",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "$",
          "to": "\\n",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\[ \\]",
          "to": ":black_square_button:",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\[x\\]",
          "to": ":white_check_mark:",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "asked",
      "rules": [
        {
          "from": ":speech_balloon:",
          "to": "",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "^([\\s#\\-]*)((\\[[^\\[\\]]\\]\\s*){0,1})",
          "to": "$1$2:speaking_head_in_silhouette: ",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "doc / tutorial",
      "rules": [
        {
          "from": "^(#*)([\\s-]*)((\\[.\\]\\s*)*)(.*)",
          "to": "$1$2$3:beginner: $5",
          "caseInsensitive": false,
          "global": false,
          "multiline": true,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "",
          "to": "",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": false,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "clean vuex store log",
      "rules": [
        {
          "from": "\\n__TEST__ store debug\\n",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": true,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\n\\[index\\.ts.*\\n",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": true,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "multiline code block (```)",
      "rules": [
        {
          "from": "([^¶]+)",
          "to": "```\\n$1\\n```",
          "caseInsensitive": false,
          "global": false,
          "multiline": true,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "# can't reproduce test header task",
      "rules": [
        {
          "from": "[ ]*:black_square_button:[ ]*",
          "to": " ",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "(#+)[ ]*",
          "to": "$1 :woman-shrugging: ",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "# header investigate",
      "rules": [
        {
          "from": "(#+)[ ]*",
          "to": "$1 :sleuth_or_spy: ",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "- `JSON value escape`",
      "rules": [
        {
          "from": "[- ]*\"([^\"]+)\":[ ]*([^\\n\\r]+)",
          "to": "- `$1: $2`",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "- [ ] inline error (list item) (`)",
      "rules": [
        {
          "from": "^([ \\t]*)-*[ \\t]*([^\\n\\r]*)",
          "to": "$1- [ ] :rotating_light: `$2`",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "- `visual component`",
      "rules": [
        {
          "from": "[`<>]+",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "^([ \\t]*)-*[ \\t]*([^\\n\\r]*)",
          "to": "$1- :gem: `<$2>`",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "method name from fqn",
      "rules": [
        {
          "from": "([^`]+[ ]+)([a-zA-Z0-9_]+\\.)",
          "to": "$2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": ": \\(",
          "to": "(",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "\\) => [^`\\n\\r]*",
          "to": ")",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "([a-zA-Z].*)",
          "to": "`$1`",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": false,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "curl fix",
      "rules": [
        {
          "from": "'Access: Bearer [^']+'",
          "to": "\"Access: Bearer $BEARER\"",
          "caseInsensitive": false,
          "global": true,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "[ \\t]*-H 'Accept[^']*'[ \\t]*[\\\\\\n\\r]*",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "[ \\t]*-H 'Cache[^']*'[ \\t]*[\\\\\\n\\r]*",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "[ \\t]*-H 'Pragma[^']*'[ \\t]*[\\\\\\n\\r]*",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "[ \\t]*-H 'Connection[^']*'[ \\t]*[\\\\\\n\\r]*",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "[ \\t]*-H 'Referer[^']*'[ \\t]*[\\\\\\n\\r]*",
          "to": "",
          "caseInsensitive": false,
          "global": true,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "[ \\t]*-H 'Sec[^']*'[ \\t]*[\\\\\\n\\r]*",
          "to": "",
          "caseInsensitive": true,
          "global": true,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "[ \\t]*-H 'User-Agent[^']*'[ \\t]*[\\\\\\n\\r]*",
          "to": "",
          "caseInsensitive": true,
          "global": true,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "news article link",
      "rules": [
        {
          "from": "^([ \\t]*)-*[ \\t]*([^\\n\\r]*)",
          "to": "$1- :collision: $2",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": true,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "url to link",
      "rules": [
        {
          "from": "^",
          "to": "[](",
          "caseInsensitive": false,
          "global": false,
          "multiline": false,
          "sticky": false,
          "disabled": false
        },
        {
          "from": "$",
          "to": ")",
          "caseInsensitive": false,
          "global": false,
          "multiline": true,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": false,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    },
    {
      "name": "edu",
      "rules": [
        {
          "from": "^(#*)([\\s-]*)((\\[.\\]\\s*)*)(.*)",
          "to": "$1$2$3:mortar_board: $5",
          "caseInsensitive": false,
          "global": false,
          "multiline": true,
          "sticky": false,
          "disabled": false
        }
      ],
      "collapsed": false,
      "cursorRegexStart": "$",
      "cursorRegexEnd": "^"
    }
  ],
  "filterString": "method",
  "commandFilterString": "",
  "commands": [],
  "apiVersion": 6,
  "defaultCursorRegexEnd": "^",
  "defaultCursorRegexStart": "$"
}
